"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class user {
    constructor(name, subject, noticallback) {
        this.name = name;
        this.subject = subject;
        this.noticallback = noticallback;
        this.subject.register(this);
        this.callback = noticallback;
    }
    sendMsg(msg, user) {
        this.subject.sendMsg(this, msg, user);
    }
    receiveMsg(sender, msg) {
        console.log(`${this.name} 收到来自${sender.name}的消息： ${msg} `);
        this.callback(msg);
    }
}
class group {
    constructor() {
        this.userList = [];
    }
    register(observer) {
        this.userList.push(observer);
    }
    unregister(observer) {
        var index = this.userList.indexOf(observer);
        if (index > -1) {
            this.userList.splice(index, 1);
            console.log("成功注销", observer);
        }
        else {
            console.log("未成功注销", observer);
        }
        console.log("当前注册者为", this.userList);
    }
    sendMsg(sender, msg, user) {
        this.notify(sender, msg, user);
    }
    notify(sender, msg, user) {
        this.userList.forEach(function (userinlist) {
            if (userinlist.name == user) {
                userinlist.receiveMsg(sender, msg);
            }
        });
    }
}
class wsmanager {
    constructor() {
    }
    static getInstance() {
        return wsmanager.instance;
    }
    eguser(name, callb) {
        console.log(name + "已注册");
        return new user(name, wsmanager.centra, callb);
    }
    cguser(name) {
        wsmanager.centra.unregister(name);
    }
}
exports.wsmanager = wsmanager;
wsmanager.instance = new wsmanager();
wsmanager.centra = new group();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTm90aWZpY2F0aW9uQ2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiTm90aWZpY2F0aW9uQ2VuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBYUEsTUFBTSxJQUFJO0lBRVIsWUFBbUIsSUFBWSxFQUFVLE9BQWdCLEVBQVMsWUFBeUI7UUFBeEUsU0FBSSxHQUFKLElBQUksQ0FBUTtRQUFVLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFBUyxpQkFBWSxHQUFaLFlBQVksQ0FBYTtRQUN6RixJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM1QixJQUFJLENBQUMsUUFBUSxHQUFHLFlBQVksQ0FBQztJQUUvQixDQUFDO0lBQ0QsT0FBTyxDQUFDLEdBQVcsRUFBRSxJQUFZO1FBQy9CLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUVELFVBQVUsQ0FBQyxNQUFnQixFQUFFLEdBQVc7UUFDdEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLFFBQVEsTUFBTSxDQUFDLElBQUksUUFBUSxHQUFHLEdBQUcsQ0FBQyxDQUFDO1FBQzNELElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUE7SUFDcEIsQ0FBQztDQUNGO0FBQ0QsTUFBTSxLQUFLO0lBQVg7UUFDVSxhQUFRLEdBQW9CLEVBQUUsQ0FBQztJQWdDekMsQ0FBQztJQTlCQyxRQUFRLENBQUMsUUFBa0I7UUFDekIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUVELFVBQVUsQ0FBQyxRQUFrQjtRQUMzQixJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM1QyxJQUFJLEtBQUssR0FBRyxDQUFDLENBQUMsRUFBRTtZQUNkLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQztZQUMvQixPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBQyxRQUFRLENBQUMsQ0FBQztTQUM5QjthQUFJO1lBQ0gsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUMsUUFBUSxDQUFDLENBQUM7U0FDL0I7UUFFRCxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDdEMsQ0FBQztJQUVELE9BQU8sQ0FBQyxNQUFnQixFQUFFLEdBQVcsRUFBRSxJQUFZO1FBRWpELElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBRU8sTUFBTSxDQUFDLE1BQWdCLEVBQUUsR0FBVyxFQUFFLElBQVk7UUFDeEQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQ25CLFVBQVUsVUFBVTtZQUNsQixJQUFJLFVBQVUsQ0FBQyxJQUFJLElBQUksSUFBSSxFQUFFO2dCQUMzQixVQUFVLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQTthQUNuQztRQUNILENBQUMsQ0FDRixDQUFBO0lBQ0gsQ0FBQztDQUNGO0FBQ0QsTUFBYSxTQUFTO0lBR3BCO0lBQXdCLENBQUM7SUFDekIsTUFBTSxDQUFDLFdBQVc7UUFDaEIsT0FBTyxTQUFTLENBQUMsUUFBUSxDQUFBO0lBQzNCLENBQUM7SUFDRCxNQUFNLENBQUMsSUFBWSxFQUFFLEtBQWtCO1FBQ3JDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQyxDQUFDO1FBQzFCLE9BQU8sSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUE7SUFDaEQsQ0FBQztJQUNELE1BQU0sQ0FBQyxJQUFTO1FBQ2QsU0FBUyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUE7SUFDbkMsQ0FBQzs7QUFiSCw4QkFjQztBQWJnQixrQkFBUSxHQUFHLElBQUksU0FBUyxFQUFFLENBQUE7QUFDbEMsZ0JBQU0sR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW50ZXJmYWNlIE9ic2VydmVyIHtcbiAgbmFtZTogc3RyaW5nO1xuICBjYWxsYmFjazogY2FsbGJhY2tmdW47XG4gIHNlbmRNc2cobXNnOiBzdHJpbmcsIHVzZXI6IHN0cmluZyk6IGFueTtcbiAgcmVjZWl2ZU1zZyhzZW5kZXI6IE9ic2VydmVyLCBtc2c6IHN0cmluZyk6IGFueTtcbn1cblxuaW50ZXJmYWNlIFN1YmplY3Qge1xuICByZWdpc3RlcihvYnNlcnZlcjogT2JzZXJ2ZXIpOiBhbnk7XG4gIHVucmVnaXN0ZXIob2JzZXJ2ZXI6IE9ic2VydmVyKTogYW55O1xuICBzZW5kTXNnKHNlbmRlcjogT2JzZXJ2ZXIsIG1zZzogc3RyaW5nLCB1c2VyOiBzdHJpbmcpOiBhbnk7XG59XG50eXBlIGNhbGxiYWNrZnVuID0gKGE6IHN0cmluZykgPT4gdm9pZFxuY2xhc3MgdXNlciBpbXBsZW1lbnRzIE9ic2VydmVyIHtcbiAgY2FsbGJhY2s6IGNhbGxiYWNrZnVuO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgbmFtZTogc3RyaW5nLCBwcml2YXRlIHN1YmplY3Q6IFN1YmplY3QsIHB1YmxpYyBub3RpY2FsbGJhY2s6IGNhbGxiYWNrZnVuKSB7XG4gICAgdGhpcy5zdWJqZWN0LnJlZ2lzdGVyKHRoaXMpO1xuICAgIHRoaXMuY2FsbGJhY2sgPSBub3RpY2FsbGJhY2s7XG5cbiAgfVxuICBzZW5kTXNnKG1zZzogc3RyaW5nLCB1c2VyOiBzdHJpbmcpIHtcbiAgICB0aGlzLnN1YmplY3Quc2VuZE1zZyh0aGlzLCBtc2csIHVzZXIpO1xuICB9XG5cbiAgcmVjZWl2ZU1zZyhzZW5kZXI6IE9ic2VydmVyLCBtc2c6IHN0cmluZykge1xuICAgIGNvbnNvbGUubG9nKGAke3RoaXMubmFtZX0g5pS25Yiw5p2l6IeqJHtzZW5kZXIubmFtZX3nmoTmtojmga/vvJogJHttc2d9IGApO1xuICAgIHRoaXMuY2FsbGJhY2sobXNnKVxuICB9XG59XG5jbGFzcyBncm91cCBpbXBsZW1lbnRzIFN1YmplY3Qge1xuICBwcml2YXRlIHVzZXJMaXN0OiBBcnJheTxPYnNlcnZlcj4gPSBbXTtcblxuICByZWdpc3RlcihvYnNlcnZlcjogT2JzZXJ2ZXIpIHtcbiAgICB0aGlzLnVzZXJMaXN0LnB1c2gob2JzZXJ2ZXIpO1xuICB9XG5cbiAgdW5yZWdpc3RlcihvYnNlcnZlcjogT2JzZXJ2ZXIpIHtcbiAgICB2YXIgaW5kZXggPSB0aGlzLnVzZXJMaXN0LmluZGV4T2Yob2JzZXJ2ZXIpO1xuICAgIGlmIChpbmRleCA+IC0xKSB7XG4gICAgICB0aGlzLnVzZXJMaXN0LnNwbGljZShpbmRleCwgMSk7XG4gICAgICBjb25zb2xlLmxvZyhcIuaIkOWKn+azqOmUgFwiLG9ic2VydmVyKTtcbiAgICB9ZWxzZXtcbiAgICAgIGNvbnNvbGUubG9nKFwi5pyq5oiQ5Yqf5rOo6ZSAXCIsb2JzZXJ2ZXIpO1xuICAgIH1cbiAgIFxuICAgIGNvbnNvbGUubG9nKFwi5b2T5YmN5rOo5YaM6ICF5Li6XCIsdGhpcy51c2VyTGlzdCk7XG4gIH1cblxuICBzZW5kTXNnKHNlbmRlcjogT2JzZXJ2ZXIsIG1zZzogc3RyaW5nLCB1c2VyOiBzdHJpbmcpIHtcbiAgICAvLyBjb25zb2xlLmxvZyhg5pyN5Yqh5Zmo5pS25YiwJHtzZW5kZXIubmFtZX3lj5Hkv6Hmga/vvJoke21zZ33vvIzpgJrnn6XmiYDmnInkurpgKTtcbiAgICB0aGlzLm5vdGlmeShzZW5kZXIsIG1zZywgdXNlcik7XG4gIH1cblxuICBwcml2YXRlIG5vdGlmeShzZW5kZXI6IE9ic2VydmVyLCBtc2c6IHN0cmluZywgdXNlcjogc3RyaW5nKSB7XG4gICAgdGhpcy51c2VyTGlzdC5mb3JFYWNoKFxuICAgICAgZnVuY3Rpb24gKHVzZXJpbmxpc3QpIHtcbiAgICAgICAgaWYgKHVzZXJpbmxpc3QubmFtZSA9PSB1c2VyKSB7XG4gICAgICAgICAgdXNlcmlubGlzdC5yZWNlaXZlTXNnKHNlbmRlciwgbXNnKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgKVxuICB9XG59XG5leHBvcnQgY2xhc3Mgd3NtYW5hZ2VyIHtcbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2UgPSBuZXcgd3NtYW5hZ2VyKClcbiAgc3RhdGljIGNlbnRyYSA9IG5ldyBncm91cCgpO1xuICBwcml2YXRlIGNvbnN0cnVjdG9yKCkgeyB9XG4gIHN0YXRpYyBnZXRJbnN0YW5jZSgpOiB3c21hbmFnZXIge1xuICAgIHJldHVybiB3c21hbmFnZXIuaW5zdGFuY2VcbiAgfVxuICBlZ3VzZXIobmFtZTogc3RyaW5nLCBjYWxsYjogY2FsbGJhY2tmdW4pIHtcbiAgICBjb25zb2xlLmxvZyhuYW1lICsgXCLlt7Lms6jlhoxcIik7XG4gICAgcmV0dXJuIG5ldyB1c2VyKG5hbWUsIHdzbWFuYWdlci5jZW50cmEsIGNhbGxiKVxuICB9XG4gIGNndXNlcihuYW1lOnVzZXIpe1xuICAgIHdzbWFuYWdlci5jZW50cmEudW5yZWdpc3RlcihuYW1lKVxuICB9XG59Il19